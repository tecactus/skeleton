<?php

namespace {{namespace}}\Http\Controllers;

use {{namespace}}\User;
use Illuminate\Http\Request;
use {{namespace}}\Http\Requests\UserRequest;
use {{namespace}}\DataTables\UserDataTable;

class UsersController extends Controller
{
    /**
     * Create a new controller instance.
     *
     * @return void
     */
    public function __construct()
    {
        $this->middleware(['auth', 'admin_only']);
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index(UserDataTable $dataTable)
    {
        return $dataTable->render('skeleton::datatables.index', [
            'panelTitle' => 'Usuarios',
            'appId' => 'user-creation-app',
            'creationForm' => 'users.creation-form'
        ]);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(UserRequest $request)
    {
        $data = $request->all();
        $data['password'] = bcrypt($data['password']);
        $user = User::create($data);
        return response()->json($user);
    }

    /**
     * Display the specified resource.
     *
     * @param  \{{namespace}}\User  $user
     * @return \Illuminate\Http\Response
     */
    public function show(User $user)
    {
        return $user;
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \{{namespace}}\User  $user
     * @return \Illuminate\Http\Response
     */
    public function update(UserRequest $request, User $user)
    {
        $data = [
            'name' =>  $request->name,
            'email' =>  $request->email,
            'user_type_id' =>  $request->user_type_id,
        ];
        if (!is_null($request->password)) {
            $data['password'] = bcrypt($data['password']);
        }
        $user->update($data);
        return response()->json($user);

    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \{{namespace}}\User  $user
     * @return \Illuminate\Http\Response
     */
    public function destroy(User $user)
    {
        try {
            $user->delete();
            return response()->json();
        } catch (Exception $e) {
            return response()->json('', 500);
        }
    }
}
